name: cd

on:
  push:
    branches:
      - 'release'

env:
  REPOSITORY: istock-backend
  ORGANIZATION: pororoz

jobs:
  push-docker-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Take tag version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Java17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # env의 내용을 files에 복사
      - name: Set application.yml
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application-spring*.yml
        env:
          spring.datasource.username: ${{ secrets.MYSQL_USERNAME }}
          spring.datasource.password: ${{ secrets.MYSQL_PASSWORD }}

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker registry login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ env.ORGANIZATION }}
          password: ${{ secrets.ACCESS_TOKEN }}

      - name: Build with Gradle
        run: chmod +x gradlew && ./gradlew bootJar

      - name: Build image and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          tags: |
            ghcr.io/${{ env.ORGANIZATION }}/${{ env.REPOSITORY }}:latest
            ghcr.io/${{ env.ORGANIZATION }}/${{ env.REPOSITORY }}:${{ steps.tag_version.outputs.new_tag }}
          push: true

  deploy:
    needs: [ push-docker-image ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # env의 내용을 files에 복사
      - name: Set docker-compose.prod.yml
        uses: microsoft/variable-substitution@v1
        with:
          files: ./docker-compose.prod.yml
        env:
          services.mysql.environment.MYSQL_USER: ${{ secrets.MYSQL_USERNAME }}
          services.mysql.environment.MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          services.mysql.environment.MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          services.spring1.image: ghcr.io/${{ env.ORGANIZATION }}/${{ env.REPOSITORY }}:latest
          services.spring2.image: ghcr.io/${{ env.ORGANIZATION }}/${{ env.REPOSITORY }}:latest

      # 파일을 ssh를 통해 서버로 복사
      - name: Copy docker compose & Scripts & Nginx
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: './docker-compose.prod.yml,./script,./nginx'
          target: ${{ env.REPOSITORY }}

      - name: Deploy
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            if [ -f ~/nginx/conf.d/service-url.inc ]
            then
              cp -f ~/nginx/conf.d/service-url.inc ~/${{ env.REPOSITORY }}/nginx/conf.d
            fi
            cp -r ~/${{ env.REPOSITORY }}/nginx ~ && rm -rf ~/${{ env.REPOSITORY }}/nginx
            cd ~/${{ env.REPOSITORY }}
            echo ${{ secrets.ACCESS_TOKEN }} | docker login https://ghcr.io -u pororoz --password-stdin
            sudo chmod +x ./script/*.sh
            ./script/deploy.sh ${{ env.ORGANIZATION }} ${{ env.REPOSITORY }}
            ./script/health.sh ${{ env.ORGANIZATION }} ${{ env.REPOSITORY }}
            docker logout https://ghcr.io
