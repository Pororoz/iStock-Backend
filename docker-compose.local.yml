version: "3.9"

services:
  spring:
    container_name: spring
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      SERVER_MODE: local
      MYSQL_USERNAME: "${MYSQL_USERNAME}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - redis
      - nginx
    networks:
      - local

  nginx:
    container_name: nginx
    image: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    extra_hosts:
      - "host.docker,internal:host-gateway"
    volumes:
      - ./nginx/local/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/local/conf.d/application.conf:/etc/nginx/conf.d/application.conf
    environment:
      - TZ=Asia/Seoul
    networks:
      - local

  mysql:
    container_name: mysql
    image: mysql:8.0
    restart: always
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: istock
      MYSQL_USER: "${MYSQL_USERNAME}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    volumes:
      - ~/istock-volume/mysql:/var/lib/mysql
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    networks:
      - local

  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - local

networks:
  local:
    driver: bridge