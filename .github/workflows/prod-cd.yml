name: cd

# dev-cd.yml과 github actions secret이 동일해서 추후 수정 필요

on:
  push:
    branches:
      - 'blocked'

env:
  REPOSITORY: istock-backend
  ORGANIZATION: pororoz
  DOCKER_COMPOSE_FILE: docker-compose.prod.yml

jobs:
  push-docker-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Extract version name from commit message
        run: echo "version=$(echo '${{ github.event.head_commit.message }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')" >> $GITHUB_OUTPUT
        id: extract_version_name

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker registry login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ env.ORGANIZATION }}
          password: ${{ secrets.ACCESS_TOKEN }}

      - name: Build with Gradle
        run: chmod +x gradlew && ./gradlew bootJar

      - name: Build image and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          tags: |
            ghcr.io/${{ env.ORGANIZATION }}/${{ env.REPOSITORY }}:latest
            ghcr.io/${{ env.ORGANIZATION }}/${{ env.REPOSITORY }}:${{ steps.extract_version_name.outputs.version }}
          push: true

  deploy:
    needs: [ push-docker-image ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Make .env
        run: printf "MYSQL_USERNAME=${{ secrets.MYSQL_USERNAME }}\nMYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}\nMYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env

      # 파일을 ssh를 통해 서버로 복사
      - name: Copy docker compose & Scripts & Nginx
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: './${{ env.DOCKER_COMPOSE_FILE }},./script,./nginx/prod,./.env'
          target: ${{ env.REPOSITORY }}

      - name: Deploy
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            if [ -f ~/nginx/conf.d/service-url.inc ]
            then
              cp -f ~/nginx/conf.d/service-url.inc ~/${{ env.REPOSITORY }}/nginx/prod/conf.d
            fi
            mkdir -p nginx && cp -r ~/${{ env.REPOSITORY }}/nginx/prod/* ~/nginx && rm -rf ~/${{ env.REPOSITORY }}/nginx
            cd ~/${{ env.REPOSITORY }}
            echo ${{ secrets.ACCESS_TOKEN }} | docker login https://ghcr.io -u pororoz --password-stdin
            chmod +x ./script/*.sh
            ./script/deploy.sh ${{ env.ORGANIZATION }} ${{ env.REPOSITORY }} ${{ env.DOCKER_COMPOSE_FILE }}
            docker logout https://ghcr.io
            ./script/health.sh ${{ env.ORGANIZATION }} ${{ env.REPOSITORY }} ${{ env.DOCKER_COMPOSE_FILE }}
            # nginx 전환에 실패하면 workflow 종료
            if [ "$?" -ge 1 ]
            then
              exit 1
            fi

      - name: Extract version name from commit message
        run: echo "version=$(echo '${{ github.event.head_commit.message }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')" >> $GITHUB_OUTPUT
        id: extract_version_name

      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.extract_version_name.outputs.version }}
          release_name: ${{ steps.extract_version_name.outputs.version }}

